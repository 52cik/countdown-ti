{"version":3,"file":"countdown.js","sources":["../index.js"],"sourcesContent":["/**\n * 什么都不做\n */\nfunction noop() {}\n\n/**\n * 倒计时工具\n *\n * @param {number|string} seconds\n * @param {function} onTick\n * @param {function} onComplete\n */\nfunction countdown(seconds, onTick, onComplete) {\n  let expires = 0; // 到期时间戳 (只精确到秒)\n  let interval = 0; // setTimeout 句柄\n\n  if (!onComplete) {\n    onComplete = onTick || noop;\n    onTick = noop;\n  }\n\n  // 设置时间\n  function setTime(sec) {\n    const isTimeStamp = /^(\\d{10}|\\d{13})$/.test(sec); // 时间戳\n    const isString = typeof sec === 'string'; // 时间格式日期字符串\n    // 时间参数类型处理\n    if (isTimeStamp) {\n      expires = sec > 1e11 ? parseInt(sec / 1000, 10) : sec;\n    } else if (isString) {\n      expires = parseInt(+new Date(sec) / 1000, 10);\n    } else {\n      expires = parseInt(+new Date() / 1000, 10) + sec; // 到期时间戳 (只精确到秒)\n    }\n  }\n\n  const ctrl = {\n    /**\n     * 终止倒计时\n     */\n    abort() {\n      clearTimeout(interval);\n    },\n    /**\n     * 设置时间\n     */\n    setTime,\n  };\n\n  // 倒计时\n  function tick() {\n    const time = parseInt(expires + 1 - new Date() / 1000, 10); // 剩余时间\n    if (time === 0) {\n      onComplete.call(ctrl); // 完成\n    } else {\n      interval = setTimeout(tick, 1000);\n      onTick.call(ctrl, time);\n    }\n  }\n\n  setTime(seconds); // 设置时间\n  tick(); // 启动\n\n  return ctrl;\n}\n\nexport default countdown;\n"],"names":["noop","seconds","onTick","onComplete","setTime","sec","isTimeStamp","test","isString","parseInt","Date","tick","time","expires","call","ctrl","setTimeout","interval"],"mappings":"qLAGA,SAASA,YAST,SAAmBC,EAASC,EAAQC,YAUzBC,EAAQC,OACTC,EAAc,oBAAoBC,KAAKF,GACvCG,EAA0B,iBAARH,IAEpBC,EACQD,EAAM,KAAOI,SAASJ,EAAM,IAAM,IAAMA,EACzCG,EACCC,UAAU,IAAIC,KAAKL,GAAO,IAAM,IAEhCI,UAAU,IAAIC,KAAS,IAAM,IAAML,WAkBxCM,QACDC,EAAOH,SAASI,EAAU,EAAI,IAAIH,KAAS,IAAM,IAC1C,IAATE,IACSE,KAAKC,MAELC,WAAWL,EAAM,OACrBG,KAAKC,EAAMH,QA1ClBC,EAAU,EACVI,EAAW,EAEVd,MACUD,GAAUF,IACdA,OAiBLe,iCAKWE,wBAmBThB,OAGDc"}